apply plugin: 'com.android.application'

apply from: "../../parse_json.gradle"

//Properties props = new Properties()
//props.load(new FileInputStream(file(rootProject.file("signing.properties"))))


android {

//    signingConfigs {
//        release {
//            keyAlias props['signing.alias']
//            keyPassword props['signing.password']
//            storeFile file(rootProject.file("debug.keystore"))
//            storePassword props['signing.password']
//        }
//
//        debug {
//            keyAlias props['signing.jjdxm_alias']
//            keyPassword props['signing.jjdxm_password']
//            storeFile file(rootProject.file("debug.keystore"))
//            storePassword props['signing.jjdxm_password']
//        }
//    }

    compileSdkVersion 30
    buildToolsVersion '30.0.1'

    defaultConfig {
        applicationId "com.tencent.iot.hub.device.android.app"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti"
            }
        }
        buildConfigField 'String', 'PRODUCT_ID', "\"${getValueById('PRODUCT_ID')}\""
        buildConfigField 'String', 'DEVICE_NAME', "\"${getValueById('DEVICE_NAME')}\""
        buildConfigField 'String', 'DEVICE_PSK', "\"${getValueById('DEVICE_PSK')}\""
        buildConfigField 'String', 'SUB_PRODUCT_ID', "\"${getValueById('SUB_PRODUCT_ID')}\""
        buildConfigField 'String', 'SUB_DEV_NAME', "\"${getValueById('SUB_DEV_NAME')}\""
        buildConfigField 'String', 'SUB_DEVICE_PSK', "\"${getValueById('SUB_DEVICE_PSK')}\""
        buildConfigField 'String', 'TEST_TOPIC', "\"${getValueById('TEST_TOPIC')}\""
        buildConfigField 'String', 'SHADOW_TEST_TOPIC', "\"${getValueById('SHADOW_TEST_TOPIC')}\""
        buildConfigField 'String', 'PRODUCT_KEY', "\"${getValueById('PRODUCT_KEY')}\""
    }
    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
//            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
//            path "CMakeLists.txt"
        }
    }

    packagingOptions {
        exclude 'org/bouncycastle/x509/CertPathReviewerMessages_de.properties'
        exclude 'org/bouncycastle/x509/CertPathReviewerMessages.properties'
    }
    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def date = new Date().format("yyyyMMddHHmmss" , TimeZone.getTimeZone("GMT+08"))
            if(variant.buildType.name == 'debug') {
                outputFileName = "hub-device-android-debug-${date}.apk"
            }
            if(variant.buildType.name == 'release') {
                outputFileName = "hub-device-android-release-${date}.apk"
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':hub-device-java')

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation project(':hub-device-android:iot_core')
    implementation project(':hub-device-android:iot_service')
    implementation project(':hub-device-android:jjdxm-ijkplayer')


//    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
//    implementation rootProject.ext.jjdxm_v7
    implementation 'com.jakewharton:butterknife:7.0.1'
    implementation 'com.github.bumptech.glide:glide:3.7.0'


    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3"
    implementation "org.java-websocket:Java-WebSocket:1.3.0"
    testImplementation 'junit:junit:4.13'
    implementation 'log4j:log4j:1.2.17'
    implementation 'de.mindpipe.android:android-logging-log4j:1.0.3'
    implementation 'com.alibaba:fastjson:1.2.74'

    //    根据需要支持去拓展，在jjdxm-ijkplayer中默认加入了armv7a的了
    implementation 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8'


    //网络获取直播视频
    implementation 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    implementation 'com.squareup.retrofit2:converter-scalars:2.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    implementation 'com.squareup.okhttp3:okhttp:3.0.1'
    implementation 'com.alibaba:fastjson:1.2.14'
}
